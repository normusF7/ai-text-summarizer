@page "/"
@namespace TextSummariser.Pages
@using TextSummariser.Models
@inherits ComponentBase

@if (!_isInitialized)
{
    <div class="loading-container">
        <div class="loader"></div>
        <div>Initializing application...</div>
    </div>
}
else
{
<div class="text-processor-container">
    <div class="upload-section">
        <h2>Upload Your Text File</h2>
        <div class="upload-area @(_isFileSelected ? "has-file" : "")">
            <InputFile OnChange="@LoadFile" class="input-file" accept=".txt" />
            <div class="upload-placeholder">
                @if (!_isFileSelected)
                {
                    <span>Click or drag to upload a text (.txt) file</span>
                }
                else
                {
                    <div class="file-info">
                        <i class="file-icon">📝</i>
                        <span class="file-name">@_state.FileName</span>
                    </div>
                }
            </div>
        </div>
    </div>
    
    <div class="api-section">
        <h2>API Configuration</h2>
        <textarea @bind="_apiSettings.GeminiApiKey" 
                  placeholder="Gemini API token"
                  class="api-input"></textarea>
        <div class="remember-key-option">
            <input type="checkbox" id="rememberKey" @bind="_apiSettings.RememberApiKey" />
            <label for="rememberKey">Remember API key on this device</label>
        </div>
    </div>

    <div class="action-section">
        <button @onclick="ProcessFile" 
                disabled="@(!_isFileSelected || _state.Status == ProcessingStatus.Processing)" 
                class="process-button">
            @(_state.Status == ProcessingStatus.Processing ? "Processing..." : "Summarize Text")
        </button>
    </div>

    @if (_state.HasError)
    {
        <div class="error-message">
            @_state.ErrorMessage
        </div>
    }

    @if (_state.Status != ProcessingStatus.NotStarted)
    {
        <div class="result-section">
            <h2>@(_state.Status == ProcessingStatus.Processing ? "Generating Summary..." : "Text Summary")</h2>
            <div class="summary-container">
                <pre class="summary-text">@_state.SummaryText</pre>
                @if (_state.Status == ProcessingStatus.Processing)
                {
                    <div class="cursor-blink"></div>
                }
            </div>
            @if (_state.Status == ProcessingStatus.Completed && _state.HasSummary)
            {
                <button @onclick="CopySummary" class="copy-button">Copy Summary</button>
            }
        </div>
    }
</div>
}
}
